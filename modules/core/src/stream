/* vim: set ft=cpp: */

#include <stream>
#include <io>
#include <sys>

namespace helix
{
	auto stream::write(u8 const* val, usize size) -> stream&
	{
		for(usize i = 0; i < size; i++)
		{
			this->buffer.push(val[i]);
		}	

		return *this;
	}

	auto stream::read(u8* val, usize size) -> stream&
	{
		for(usize i = 0; i < size; i++)
		{
			val[i] = buffer.pop();
		}	

		return *this;
	}

	auto stream::apply(stream_op op) -> stream& {
		return op(*this);
	}
}
